#
# @(#).shfunc 1.0 06.03.92 codework/us
#
# NAME
#       .shfunc - various useful, private SHell FUNCtions
# SYNOPSIS
#       . .shfunc
# DESCRIPTION
#       defines various useful shell functions;
#       since they aren't exported, this script is for being
#       called in a sub-shell if desired;
# MODIFIED
#       29.07.94   SBartsch  -  last access for modification
#       06.03.92   USachse   -  made it  
#

#set -x

startx() {
/usr/openwin/bin/xterm -sb -sl 2000 -ls -display 10.4.30.4:0.0 -geometry 100x32
#/usr/openwin/bin/xterm -sb -sl 2000 -ls -display 10.4.20.35:0.0 -geometry 100x32
#/usr/openwin/bin/xterm -sb -sl 2000 -ls -display 10.4.20.25:0.0 -geometry 100x32
#/usr/openwin/bin/xterm -sb -sl 2000 -ls -display 10.4.62.187:0.0 -geometry 100x32
}

myenv() {
set | sort |more
}

mypath() {
echo $PATH | gawk -v RS=":" '{printf $0 "\n"}'
}

fin() {
jobs; exit
}

co() {
  /usr/bin/LPI/co $*
}

#l() {
#  view $*
#}
 
# l() {
#   more $*
# }
#  

# ---- private functions ----

T() {
set `date`
echo $4
}

me() {
  ps -fu $LOGNAME
}

mypid() {
  ps -ef |grep $LOGNAME |awk '{print $2}'
}

killme() {
  kill -9 `ps -ef |grep $LOGNAME |awk '{print $2}'`
}

logout() {
  echo "cd $PWD" > $HOME/.relogin
  exit
}

checkora() {
  ps -ef |fgrep ora
}

checkall() {
  ps -ef |more
}

showpid() {
  ps -ef |grep $* |awk '{print $2}'
}

killpid() {
  kill -9 `ps -ef |grep $* |awk '{print $2}'`
}

subawk() {
  awk '{printf("%.80s\n", substr($0,1,80))}' $1 > $2
}

sublist() {
  awk '{printf("%.80s\n", substr($0,31,80))}' $1 > $2
}

hidden(){
  what="$1"
  for i in `find . -name \.[a-zA-Z0-9]*`
  do
  fgrep -il $what $i
  done
}

fsearch() {
  fpref="*"
  param2="$2"
  flist=${param2:=$fpref}
  param1="$1"
  pattern=$param1
  if [ "$param1" = "" -o "$param1" = "?" -o "$param1" = "-?" ]    
   then
     case "$1" in
     "")  echo "--> !! Search pattern is missing !!"
     esac
     echo "--> Usage:    fsearch pattern filelist"
     echo "--> Example:  fsearch 'case dictionary' '*.txt'"
   else
     echo "Searching for pattern <$pattern> in file list <$flist> !! "
     find . -name "$flist" -exec fgrep -il "$pattern" {} \; |more
  fi
}

fchange() {
param1="$1"
param2="$2"
param3="$3"
extpref="*"
flist=${param3:=$extpref}
sedfile=$param2
if [ "$param1" = "" -o "$param1" = "?" -o "$param1" = "-?" ]
 then
   case "$param1" in
   "") echo "--> !! option [-e|-f] is missing !!" ;;
   esac
   echo "--> Usage:    change -f sedfile filelist"
   echo "--> Usage:    change -e regexpr filelist"
   echo "--> Example:  change -e '1,\$s/HELLO/WORLD/g' '*.txt'"
 else
   if [ "$param1" = "-e" -o "$param1" = "-f"  ]
    then
      case "$param1" in
      "-e")
        echo "Change pattern <$sedfile> for file list <$flist> !! "
        for i in `find . -name "$flist" -print`
        do
         # sed -e "$sedfile"  `basename $i` | tee `basename $i`
         filename=`basename $i`
         sed -e "$sedfile"  $filename  > $filename.tmp
         mv $filename.tmp $filename
        done
        ;;
      "-f")
        echo "Change pattern from <$sedfile> for file list <$flist> !! "
        for i in `find . -name "$flist" -print`
        do
         # sed -f $sedfile  `basename $i` | tee `basename $i`
         filename=`basename $i`
         sed -f "$sedfile"  $filename  > $filename.tmp
         mv $filename.tmp $filename
        done
        ;;
      esac
     else
       echo "--> !! option [-e|-f] is missing or incorrect !!"
   fi
fi
}

lsz() {
/bin/ls -l $* | awk '{print $5 " " $9}'
}

# --- optionally set SHELL DEBUG on/off ---
debug_on() {
SHELL_DEBUG="T"; export SHELL_DEBUG
echo "SHELL_DEBUG activated"
}

debug_off() {
SHELL_DEBUG=""; export SHELL_DEBUG
echo "SHELL_DEBUG suppressed"
}

# --- IV98 DB development ---
sqp() {
  dbpref="eIV988"
  uppref="spr_schema/spr_schema"
  param1="$1"
  param2="$2"
  dbname=${param1:=$dbpref}
  unpw=${param2:=$uppref}
  sqlplus $unpw@$dbname
}

# --- start SQL*Plus as user 'SYSTEM' ---
sysplus() {
sqlplus system/`eval eval echo '\$'PSWD\$ORACLE_SID`  
}

# --- optionally change ORACLE_SID ---
orasid() {
  param1="$1"
  chgsid=${param1:="$ORACLE_SID"}
  ORACLE_SID=$chgsid
  export ORACLE_SID
  echo "ORACLE_SID --> $ORACLE_SID"
}

# --- optionally change ORACLE_SID ---
orahome() {
  param1="$1"
  chghome=${param1:="$ORACLE_HOME"}
  ORACLE_HOME=$chghome
  export ORACLE_HOME
  echo "ORACLE_HOME --> $ORACLE_HOME"
}

# functions for fast Change Directory

cdlbin() {
  cd /usr/local/bin
  pwd
}

cdtmp() {
  case $1 in
    ".")     
             cd ../tmp
             ;;
    "-g")
             cd $TMP
             ;;
    "-l") 
             cd $HOME/tmp
             ;;
    *)       
             cd $TMP
             ;;
  esac
  pwd
}

cdcore() {
  srcdirpref="rbs"
  subtarget=":"
  param1="$1"
  param2="$2"
  srcdir=${param1:=$srcdirpref}
  subdir=${param2:=$subtarget}
  case "$srcdir" in
  "bpd01r") 
           coredir="bp1"
           ;;
  "cds01r") 
           coredir="cd1"
           ;;
  "glv01r") 
           coredir="gl1"
           ;;
  "pds01r") 
           coredir="pd1"
           ;;
  *)    
           coredir="$srcdir"
           ;;
  esac
  #echo "SUBDIR: $subdir"
  case "$subdir" in
  ":")
           cd /vobs/dma_source/"$coredir"_core/db/$srcdir/db
           ;;
  *)
           cd /vobs/dma_source/"$coredir"_core/db/$srcdir/db/$subdir
           ;;
  esac
  #cd /vobs/dma_source/"$coredir"_core/db/$srcdir/db
  pwd
}

cdsrc50() {
  srcdirpref="rbs"
  param1="$1"
  srcdir=${param1:=$srcdirpref}
  cd /vobs/dma_source/"$srcdir"_core/db/$srcdir/db
  pwd
}

cdsrc() {
  srcdirpref="rbs"
  param1="$1"
  srcdir=${param1:=$srcdirpref}
  cd /vobs/com_source/datenman/db-admin/scripts/$srcdir/db
  pwd
}

cdbld() {
  srcdirpref="rbs"
  param1="$1"
  srcdir=${param1:=$srcdirpref}
  cd /vobs/com_source/datenman/db-admin/build/$srcdir
  pwd
}

cdke() {
  srcdirpref="rat"
  param1="$1"
  srcdir=${param1:=$srcdirpref}
  cd /vobs/rbi_source/$srcdir/db/vo_sp
  pwd
}

cbd() {
  subdirpref="vo_sp"
  srcdirpref="db"
  param1="$1"
  param2="$2"
  subdir=${param1:=$subdirpref}
  srcdir=${param2:=$srcdirpref}
  cd /vobs/bil_source/cbd/$srcdir/$subdir
  pwd
}

xox() {
  subdirpref="vo_sp"
  srcdirpref="db"
  param1="$1"
  param2="$2"
  subdir=${param1:=$subdirpref}
  srcdir=${param2:=$srcdirpref}
  cd /vobs/bil_source/xox/$srcdir/$subdir
  pwd
}

usm() {
  subdirpref="vo_sp"
  srcdirpref="db"
  param1="$1"
  param2="$2"
  subdir=${param1:=$subdirpref}
  srcdir=${param2:=$srcdirpref}
 #cd /vobs/bil_source/red/$srcdir/$subdir
  cd /vobs/bil_source/cbd/$srcdir/$subdir
  pwd
}

cdbil() {
  srcdirpref="bil_apps"
  param1="$1"
  srcdir=${param1:=$srcdirpref}
  cd /vobs/bil_source/$srcdir/db/vo_sp
  pwd
}

cdrat() {
  srcdirpref="rat"
  param1="$1"
  srcdir=${param1:=$srcdirpref}
  cd /vobs/rbi_source/$srcdir/db/vo_sp
  pwd
}


cdx() {
  srcdirpref="work"
  param1="$1"
  srcdir=${param1:=$srcdirpref}
  cd $HOME/tools/transfer/$srcdir
  pwd
}

cdbill() {
  cd /vobs/rabi_source/billing/src/database
  pwd
}

cdw() {
  subdirpref="rbs"
  srcdirpref="carmen"
  param1="$1"
  param2="$2"
  subdir=${param1:=$subdirpref}
  srcdir=${param2:=$srcdirpref}
  cd $HOME/$srcdir/$subdir
  pwd
}

cdtools() {
  srcdirpref="sql"
  param1="$1"
  srcdir=${param1:=$srcdirpref}
  cd $HOME/tools/$srcdir
  pwd
}

# ping() {
#   /etc/ping ${*} 
# } 

pman()
{
  man $1|more
}

# global functions usually defined in /etc/profile;
# located here to be automatically executed in every subshell;

#la() {
#/bin/ls -Ca $*
#}

lf() {
/bin/ls -CF $*
}

li() {
/bin/ls -li $* 
}

#ll() {
#/bin/ls -l $*
#}

#ls() {
#/bin/ls -C $*
#}

lt() {
/bin/ls -ltR $*
}

ltr() {
/bin/ls -ltr $*
}

# cleartool functions

ctfind() {
cleartool find -all -element '{lbtype_sub($1)}' -print
}

alias ct='cleartool'
alias co='cleartool co -nc'
alias ci='cleartool ci -nc'
alias unco='cleartool unco'
alias ctdiff='cleartool diff -ser'
alias ctchmod='cleartool protect -chmod'
alias log='cleartool lshistory'

# CBD Dec  
#alias setview54='exec cleartool setview -login bartschs_cbd_rel54_ux'
#alias setview61='exec cleartool setview -login bartschs_cbd_rel61_ux'
#alias setview62='exec cleartool setview -login bartschs_cbd_rel62_ux'
#alias setview63='exec cleartool setview -login bartschs_cbd_rel63_ux'
#alias setview64='exec cleartool setview -login bartschs_cbd_rel64_ux'
#alias setview71='exec cleartool setview -login bartschs_cbd_rel71_ux'
#alias setview72='exec cleartool setview -login bartschs_cbd_rel72_ux'
#alias setview74='exec cleartool setview -login bartschs_cbd_rel74_ux'
#alias setview81='exec cleartool setview -login bartschs_cbd_rel81_ux'
#alias setview='exec cleartool setview -login bartschs_cbd_main_ux'

# CBD Sun  
alias setview81='exec cleartool setview -login bartschs_sunos_cbd_rel81_ux'
alias setview82='exec cleartool setview -login bartschs_sunos_cbd_rel82_ux'
alias setview83='exec cleartool setview -login bartschs_sunos_cbd_rel83_ux'
alias setview84='exec cleartool setview -login bartschs_sunos_cbd_rel84_ux'
alias setview91='exec cleartool setview -login bartschs_sunos_cbd_rel91_ux'
alias setview92='exec cleartool setview -login bartschs_sunos_cbd_rel92_ux'
alias setview93='exec cleartool setview -login bartschs_sunos_cbd_rel93_ux'
alias setview94='exec cleartool setview -login bartschs_sunos_cbd_rel94_ux'
alias setview94devtm='exec cleartool setview -login bartschs_sunos_cbd_rel94devtm_ux'
alias setview101='exec cleartool setview -login bartschs_sunos_cbd_rel101_ux'
alias setview102='exec cleartool setview -login bartschs_sunos_cbd_rel102_ux'
alias setview103='exec cleartool setview -login bartschs_sunos_cbd_rel103_ux'
alias setview104='exec cleartool setview -login bartschs_sunos_cbd_rel104_ux'
alias setview111='exec cleartool setview -login bartschs_sunos_cbd_rel111_ux'
alias setview112='exec cleartool setview -login bartschs_sunos_cbd_rel112_ux'
alias setview113='exec cleartool setview -login bartschs_sunos_cbd_rel113_ux'
alias setview114='exec cleartool setview -login bartschs_sunos_cbd_rel114_ux'
alias setview122='exec cleartool setview -login bartschs_sunos_cbd_rel122_ux'
alias setview123='exec cleartool setview -login bartschs_sunos_cbd_rel123_ux'
alias setview131='exec cleartool setview -login bartschs_sunos_cbd_rel131_ux'
alias setview132='exec cleartool setview -login bartschs_sunos_cbd_rel132_ux'
alias setview133='exec cleartool setview -login bartschs_sunos_cbd_rel133_ux'
alias setview141='exec cleartool setview -login bartschs_sunos_cbd_rel141_ux'
alias setview='exec cleartool setview -login bartschs_sunos_cbd_main_ux'
alias setview_main='exec cleartool setview -login bartschs_sunos_cbd_main_ux'
alias setview113_devpoc='exec cleartool setview -login bartschs_sunos_cbd_rel113devpoc_ux'
alias setview114_devpoc='exec cleartool setview -login bartschs_sunos_cbd_rel114_devpoc_ux'
alias setview123_devpoc='exec cleartool setview -login bartschs_sunos_cbd_rel123_devpoc_ux'
alias setview132_devpoc='exec cleartool setview -login bartschs_sunos_cbd_rel132_devpoc_ux'
alias setview133_devpoc='exec cleartool setview -login bartschs_sunos_cbd_rel133_devpoc_ux'

# XOX
alias setviewxox54='exec cleartool setview -login bartschs_xox_rel54_ux'
alias setviewxox61='exec cleartool setview -login bartschs_xox_rel61_ux'
alias setviewxox='exec cleartool setview -login bartschs_xox_main_ux'
alias setviewxoxsun='exec cleartool setview -login bartschs_sunos_xox_ux'

# RED
alias setviewred71='exec cleartool setview -login bartschs_red_rel71_ux'
alias setviewred72='exec cleartool setview -login bartschs_red_rel72_ux'
alias setviewred74='exec cleartool setview -login bartschs_red_rel74_ux'
alias setviewred81='exec cleartool setview -login bartschs_red_rel81_ux'
alias setviewred='exec cleartool setview -login bartschs_red_main_ux'

alias ctls='cleartool lsco -all -me'

alias label_files_ps='/vobs/com_source/datenman/db-admin/Tools/Build/label_ps_files.ksh'
alias copy_files_ps='/vobs/com_source/datenman/db-admin/Tools/Build/copy_ps_files.ksh'
alias ch_root_ps='/vobs/com_source/datenman/db-admin/Tools/Build/ch_ps_root.ksh'

